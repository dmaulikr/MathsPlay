//
//  SquareRootViewController.m
//  KidsLearningGame
//
//  Created by qainfotech on 30/09/13.
//  Copyright (c) 2013 QAInfotech. All rights reserved.
//

#import "SquareRootViewController.h"
#import <math.h>

@interface SquareRootViewController ()
{
    
}
@end

@implementation SquareRootViewController
@synthesize modal=_modal;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}


- (void)viewDidLoad
{
    [super viewDidLoad];
    SET_USERNAME_AS_TITLE
    audioToolBox=[[CustomAudioToolBox alloc]init];

    Counter=0;
    QuestionCount=0;       // count to iterate in the question array.
    complexity=10;   // initailly random no between 1 to 5 are generated by random function
    questionArray=[[self getTenRandomLessThan:complexity] mutableCopy];
    self.navigationController.navigationBar.titleTextAttributes = @{UITextAttributeTextColor : [UIColor whiteColor]}; // to change the color of navigation bar title to white color.

    UIView *lightBackgroundView=[[UIView alloc]initWithFrame:CGRectMake(120, 150,550, 550)];
    lightBackgroundView.layer.cornerRadius=275.0;
    lightBackgroundView.layer.borderWidth=2.0;
    lightBackgroundView.layer.borderColor=[UIColor blackColor].CGColor;
    lightBackgroundView.backgroundColor=[UIColor magentaColor];
    lightBackgroundView.alpha=1;
    [self.view addSubview:lightBackgroundView];
        
    if (sqrtLabel) {
        sqrtLabel=nil;
    }
    sqrtLabel=[[UILabel alloc]initWithFrame:CGRectMake(80, 180, 170, 170)];
    sqrtLabel.backgroundColor=[UIColor clearColor];
    sqrtLabel.layer.cornerRadius=85.0;
    sqrtLabel.font=[UIFont boldSystemFontOfSize:70];
    sqrtLabel.backgroundColor=[UIColor whiteColor];
    sqrtLabel.textColor=[UIColor blackColor];
    sqrtLabel.text=@"";
    sqrtLabel.textAlignment=NSTextAlignmentCenter;
    [lightBackgroundView addSubview:sqrtLabel];

    
    equalTolabel=[[UILabel alloc]initWithFrame:CGRectMake(255, 180, 50, 170)];
    equalTolabel.backgroundColor=[UIColor clearColor];
   // equalTolabel.layer.cornerRadius=85.0;
    equalTolabel.font=[UIFont boldSystemFontOfSize:70];
    equalTolabel.backgroundColor=[UIColor clearColor];
    equalTolabel.textColor=[UIColor whiteColor];
    equalTolabel.text=@"=";
    equalTolabel.textAlignment=NSTextAlignmentCenter;
    [lightBackgroundView addSubview:equalTolabel];
    
    UIGraphicsBeginImageContext(self.view.frame.size);
    [[UIImage imageNamed:@"sqrt-frame"] drawInRect:self.view.bounds];
    UIImage *image = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    self.view.backgroundColor = [UIColor colorWithPatternImage:image];
    
    tempArray=[NSMutableArray array];
    level=0;
    correctCount=0;
    incorrectCount=0;


    [self.view addSubview:incorrectCountLabel];
    [self showQuestion];
    if (answer) {
        [answer removeFromSuperview];
        answer=nil;
    }
    answer=[[UITextField alloc]initWithFrame:CGRectMake(330, 180, 170,170)];
    answer.delegate=self;
    answer.keyboardType=UIKeyboardTypeNumberPad;
    answer.font=[UIFont boldSystemFontOfSize:70];
    answer.placeholder=@"?";
    answer.layer.cornerRadius=85.0;
    answer.backgroundColor=[UIColor whiteColor];
    answer.textAlignment=NSTextAlignmentCenter;
    answer.textColor=[UIColor colorWithRed:65/255.0 green:105/255.0 blue:225/255.0 alpha:1.0];
    answer.contentVerticalAlignment = UIControlContentVerticalAlignmentCenter;
    [answer becomeFirstResponder];
    [lightBackgroundView addSubview:answer];
    
    UIButton *submitButton=[UIButton buttonWithType:UIButtonTypeCustom];
    submitButton.layer.cornerRadius=10.0;
    submitButton.titleLabel.font=[UIFont fontWithName:@"Helvitica" size:21];
    [submitButton setTitle:@"Check Result" forState:UIControlStateNormal];
    [submitButton setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    [submitButton addTarget:self action:@selector(submitClicked:) forControlEvents:UIControlEventTouchUpInside];
    submitButton.frame=CGRectMake(200, 400, 150, 70);
    submitButton.backgroundColor=[UIColor yellowColor];
    submitButton.showsTouchWhenHighlighted=YES;
    [lightBackgroundView addSubview:submitButton];
    //Custom modal to show question.
    _modal=nil;
    _modal=[[CustomModalBox alloc]initWithFrame:CGRectMake(0, 0, 400, 300)];
    _modal.backgroundColor= [UIColor colorWithRed:65/255.0 green:105/255.0 blue:225/255.0 alpha:1.0];
    _modal.center=self.view.center;
    [_modal setQuestionLabelColor:[UIColor whiteColor]];
    [_modal.yesButton setHidden:YES];
    [_modal.noButton setHidden:YES];
    moodImage=nil;
    moodImage=[[UIImageView alloc]init];
    moodImage.frame=CGRectMake(160, 150, 70, 70);
    moodImage.backgroundColor=[UIColor clearColor];
    moodImage.layer.borderColor=[UIColor blackColor].CGColor;
    moodImage.backgroundColor=[UIColor clearColor];
    moodImage.image=[UIImage imageNamed:@"HAPPY_FACE"];

    [_modal addSubview:moodImage];
    [self.view addSubview:_modal];
    [_modal hide];
    
    
    helpButton=[UIButton buttonWithType:UIButtonTypeCustom];
    [helpButton setImage:[UIImage imageNamed:@"rules"] forState:UIControlStateNormal];
    helpButton.tag=100011;
    [helpButton addTarget:self action:@selector(buttonActionMethod:) forControlEvents:UIControlEventTouchUpInside];
    helpButton.frame=CGRectMake(self.view.frame.size.width-170 , 20, 200, 80);
    helpButton.showsTouchWhenHighlighted=YES;
    [self.view addSubview:helpButton];
  	// Do any additional setup after loading the view.
}


-(void)buttonActionMethod:(UIButton *)sender
{
    UIViewController *modalForRules=[[UIViewController alloc]init];
    modalForRules.view.backgroundColor=[UIColor colorWithRed:132/255.0 green:240/255.0 blue:88/255.0 alpha:1];
    modalForRules.modalTransitionStyle=UIModalTransitionStyleCoverVertical;
    modalForRules.modalPresentationStyle=UIModalPresentationFormSheet;
    [self presentViewController:modalForRules animated:YES completion:NULL];
    UITapGestureRecognizer *tapEvent=[[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(handleTapOnModal:)];
    [modalForRules.view addGestureRecognizer:tapEvent];
    UILabel *instructionLabelTitle=[[UILabel alloc]initWithFrame:CGRectMake(10, 25,modalForRules.view.frame.size.width-30, 50)];
    instructionLabelTitle.numberOfLines=1;
    instructionLabelTitle.backgroundColor=[UIColor clearColor];
    instructionLabelTitle.textAlignment=NSTextAlignmentCenter;
    instructionLabelTitle.font=[UIFont fontWithName:RULES_FONT_NAME size:35];
    instructionLabelTitle.text=@"Rules";
    [modalForRules.view addSubview:instructionLabelTitle];
    
    UIImageView *topbar=[[UIImageView alloc]initWithFrame:CGRectMake(0, -10, modalForRules.view.frame.size.width, 50)];
    topbar.image=[UIImage imageNamed:@"sp-top"];
    [modalForRules.view addSubview:topbar];
    
    UILabel *instructionLabel=[[UILabel alloc]initWithFrame:CGRectMake(40, 80, modalForRules.view.frame.size.width-80, modalForRules.view.frame.size.height-100)];
    instructionLabel.numberOfLines=0;
    instructionLabel.backgroundColor=[UIColor clearColor];
    instructionLabel.textAlignment=NSTextAlignmentLeft;
    instructionLabel.font=[UIFont fontWithName:RULES_FONT_NAME size:30];
    instructionLabel.text=@"\na)Enter the correct answer in right circle.\n\nb)10 question are in total with no time limit.\n\nb)Result will be shown after attempting all 10 question.";
    [modalForRules.view addSubview:instructionLabel];
}


-(void)handleTapOnModal:(UITapGestureRecognizer *)recognizer
{
    [self dismissModalViewControllerAnimated:YES];
}

-(void)submitClicked:(UIButton *)sender
{
    sender.userInteractionEnabled=NO;
    if (answer.text.length>0) {
        NSString* question =[sqrtLabel.text substringFromIndex:1] ;
        if ([answer.text intValue]==sqrtf([question intValue]))
        {
            [audioToolBox playSound:@"correct" withExtension:@"mp3"];
            correctCount++;
            [answer setText:@""];
            [_modal setQuestion:@"Correct Answers!!"];
            [moodImage setImage:[UIImage imageNamed:@"HAPPY_FACE"]];
            [UIView animateWithDuration:3.0 delay:0.0 options:UIViewAnimationOptionCurveEaseInOut animations:^{
                NSLog(@"modal shown");
                [_modal show];
            } completion:^(BOOL finished) {
                sleep(1.0);
                
                [_modal hide];
                NSLog(@"modal hidden");
                if (correctCount+incorrectCount!=[questionArray count]) {
                    NSLog(@"show question 1");
                    [self showQuestion];
                    sender.userInteractionEnabled=YES;

                }
                else  {
                    [self showResult];
                }
            }];
            if ((correctCount)%5==0)
            {
                complexity=complexity+5;
            }
        }
        else
        {
            answer.text=nil;
            incorrectCount++;
            [audioToolBox playSound:@"wrong" withExtension:@"mp3"];
            [UIView animateWithDuration:3.0 delay:0.0 options:UIViewAnimationOptionCurveEaseInOut animations:^{
                [moodImage setImage:[UIImage imageNamed:@"SAD_FACE"]];
                [_modal setQuestion:[NSString stringWithFormat:@"Wrong Answer \n Reason:  âˆš%i =%.0f",[question intValue],sqrtf([question intValue])]];
                [_modal show];

            } completion:^(BOOL finished) {
                
                sleep(1.0);
                if (correctCount+incorrectCount!=[questionArray count]) {
                    [self showQuestion];
                    sender.userInteractionEnabled=YES;

                }
                [_modal hide];
                if (correctCount+incorrectCount==[questionArray count]) {
                    [self showResult];
                }
            }];
           sender.userInteractionEnabled=YES;
            ;
        }
    }
    else{
        sender.userInteractionEnabled=YES;
        UIAlertView *alert=[[UIAlertView alloc]initWithTitle:@"Empty Fields" message:@"Enter some value" delegate:nil cancelButtonTitle:@"ok" otherButtonTitles:nil, nil];
        [alert show];
    }
}


-(void)showResult
{
    [audioToolBox playSound:@"award" withExtension:@"mp3"];

    [UIView animateWithDuration:2.0 delay:0.5 options:UIViewAnimationOptionCurveEaseInOut animations:^{
        [moodImage setHidden:YES];
        [_modal setQuestion:[NSString stringWithFormat:@"Game Completed \nResult \n %.2f %@",[self calculatePercentage:correctCount total:correctCount+incorrectCount],@"%"]];
        [_modal show];
    } completion:^(BOOL finished) {
        sleep(3);
        [self.navigationController popViewControllerAnimated:YES];
    }];
}


-(void)showQuestion
{
    int  random=[[questionArray objectAtIndex:Counter++] intValue];
    [sqrtLabel setText:[NSString stringWithFormat:@"âˆš%i",random]];
}
- (int)getRandomNumber:(int)from to:(int)to
{
    return (int)from + arc4random() % (to-from+1);
}


-(float)calculatePercentage:(float)correct total:(float)total
{
    return (correct/total *100);
}
-(int)getRandomPerfectSquare{
    int randomNumber=[self getRandomNumber:2 to:complexity];
    return (randomNumber*randomNumber) +(2*randomNumber)+1;
}





-(NSMutableArray *)getTenRandomLessThan:(int)M {
    NSMutableArray *uniqueNumbers = [[NSMutableArray alloc] init];
    int randomNumber;
    while ([uniqueNumbers count] < M) {
        randomNumber = arc4random() % M+2; // ADD 2 TO GET NUMBERS BETWEEN 2 AND M RATHER THAN 2 and M-1
        
        int perfectSquare=(randomNumber*randomNumber) +(2*randomNumber)+1;
        if (![uniqueNumbers containsObject:[NSNumber numberWithInt:perfectSquare]]) {
            [uniqueNumbers addObject:[NSNumber numberWithInt:perfectSquare]];
        }
    }
    return uniqueNumbers;
}




//only number as input from keyboard
- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string
{
    if ([string length] == 0 && range.length > 0)
    {
        textField.text = [textField.text stringByReplacingCharactersInRange:range withString:string];
        return NO;
    }
    
    NSCharacterSet *nonNumberSet = [[NSCharacterSet characterSetWithCharactersInString:@"0123456789"] invertedSet];
    if ([string stringByTrimmingCharactersInSet:nonNumberSet].length > 0)return YES;
    
    return NO;
}

- (void)viewDidUnload {
    [audioToolBox dispose];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end

//
//  SquareRootViewController.m
//  KidsLearningGame
//
//  Created by qainfotech on 30/09/13.
//  Copyright (c) 2013 QAInfotech. All rights reserved.
//

#import "SquareRootViewController.h"
#import <math.h>

@interface SquareRootViewController ()
{
    UIProgressView *progressView ;
    UIView *lightBackgroundView;
}
@end

@implementation SquareRootViewController
@synthesize modal=_modal;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}


- (void)viewDidLoad
{
    [super viewDidLoad];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(KeyboardWillHide:) name:UIKeyboardWillHideNotification object:nil];
    SET_USERNAME_AS_TITLE
    audioToolBox=[[CustomAudioToolBox alloc]init];
    Counter=0;
    QuestionCount=0;       // count to iterate in the question array.
    complexity=10;   // initailly random no between 1 to 5 are generated by random function
    questionArray=[[self getTenRandomLessThan:complexity] mutableCopy];
    self.navigationController.navigationBar.titleTextAttributes = @{UITextAttributeTextColor : [UIColor whiteColor]}; // to change the color of navigation bar title to white color.
    
    lightBackgroundView=[[UIView alloc]initWithFrame:CGRectMake(0, 0,550, 550)];
    lightBackgroundView.center=CGPointMake(self.view.center.x, self.view.center.y-100);
    lightBackgroundView.layer.cornerRadius=10.0;
    lightBackgroundView.layer.borderWidth=2.0;
    lightBackgroundView.layer.borderColor=[UIColor lightTextColor].CGColor;
    lightBackgroundView.backgroundColor=[UIColor colorWithRed:132/255.0 green:240/255.0 blue:88/255.0 alpha:1];
    lightBackgroundView.alpha=1;
    [self.view addSubview:lightBackgroundView];
#pragma mark CircularProgressView
    
    
    circularProgressView=[[CircularProgressView alloc]initWithFrame:CGRectMake(lightBackgroundView.frame.size.width-70, 20, 50, 50)];
    [lightBackgroundView addSubview:circularProgressView];
    
#pragma mark Progress View starts
    
    //    progressView = [[UIProgressView alloc] initWithProgressViewStyle:UIProgressViewStyleDefault];
    //    progressView.frame=CGRectMake(180, 100, 200, 20);
    //    progressView.progressImage=[UIImage imageNamed:@"progress-fill-red"];
    //    [lightBackgroundView addSubview: progressView];
    //    CGAffineTransform transform = CGAffineTransformMakeScale(1.0f, 2.0f);
    //    progressView.transform = transform;
    
    //    UILabel* percentLabel = [[UILabel alloc] initWithFrame:CGRectMake(progressView.frame.origin.x,40,progressView.frame.size.width,50)];
    //    [percentLabel setTag:1];
    //    [percentLabel setText:@"0 % completed"];
    //    [percentLabel setBackgroundColor:[UIColor clearColor]];
    //    [percentLabel setFont:[UIFont boldSystemFontOfSize:16]];
    //    [percentLabel setTextAlignment:NSTextAlignmentCenter];
    //    [lightBackgroundView addSubview:percentLabel];
    //
    
#pragma mark Progress View ends
    if (sqrtLabel) {
        sqrtLabel=nil;
    }
    sqrtLabel=[[UILabel alloc]initWithFrame:CGRectMake(80, 180, 170, 170)];
    sqrtLabel.backgroundColor=[UIColor clearColor];
    sqrtLabel.layer.cornerRadius=85.0;
    sqrtLabel.layer.borderColor=[UIColor lightTextColor].CGColor;
    sqrtLabel.layer.borderWidth=1.0;
    sqrtLabel.font=[UIFont boldSystemFontOfSize:70];
    sqrtLabel.backgroundColor=[UIColor whiteColor];
    sqrtLabel.textColor=[UIColor blackColor];
    sqrtLabel.text=@"";
    sqrtLabel.textAlignment=NSTextAlignmentCenter;
    [lightBackgroundView addSubview:sqrtLabel];
    
    
    equalTolabel=[[UILabel alloc]initWithFrame:CGRectMake(255, 180, 50, 170)];
    equalTolabel.backgroundColor=[UIColor clearColor];
    equalTolabel.font=[UIFont boldSystemFontOfSize:70];
    equalTolabel.backgroundColor=[UIColor clearColor];
    equalTolabel.textColor=[UIColor whiteColor];
    equalTolabel.text=@"=";
    equalTolabel.textAlignment=NSTextAlignmentCenter;
    [lightBackgroundView addSubview:equalTolabel];
    
    UIGraphicsBeginImageContext(self.view.frame.size);
    [[UIImage imageNamed:@"sqrt-frame"] drawInRect:self.view.bounds];
    UIImage *image = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    self.view.backgroundColor = [UIColor colorWithPatternImage:image];
    tempArray=[NSMutableArray array];
    level=0;
    correctCount=0;
    incorrectCount=0;
    
    
    [self.view addSubview:incorrectCountLabel];
    [self showQuestion];
    if (answer) {
        [answer removeFromSuperview];
        answer=nil;
    }
    answer=[[UITextField alloc]initWithFrame:CGRectMake(330, 180, 170,170)];
    answer.delegate=self;
    answer.keyboardType=UIKeyboardTypeNumberPad;
    answer.font=[UIFont boldSystemFontOfSize:70];
    answer.placeholder=@"?";
    answer.layer.cornerRadius=85.0;
    answer.layer.borderColor=[UIColor lightTextColor].CGColor;
    answer.layer.borderWidth=1.0;
    
    answer.backgroundColor=[UIColor whiteColor];
    answer.textAlignment=NSTextAlignmentCenter;
    answer.textColor=[UIColor colorWithRed:65/255.0 green:105/255.0 blue:225/255.0 alpha:1.0];
    answer.contentVerticalAlignment = UIControlContentVerticalAlignmentCenter;
    [answer becomeFirstResponder];
    [lightBackgroundView addSubview:answer];
    UIButton *submitButton=[UIButton buttonWithType:UIButtonTypeCustom];
    submitButton.layer.cornerRadius=10.0;
    submitButton.titleLabel.font=[UIFont fontWithName:@"Helvitica" size:21];
    [submitButton setTitle:@"Check Result" forState:UIControlStateNormal];
    [submitButton setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    [submitButton addTarget:self action:@selector(submitClicked:) forControlEvents:UIControlEventTouchUpInside];
    submitButton.frame=CGRectMake(200, 400, 150, 70);
    submitButton.backgroundColor=[UIColor yellowColor];
    submitButton.showsTouchWhenHighlighted=YES;
    [lightBackgroundView addSubview:submitButton];
    //Custom modal to show question.
    
    _modal=nil;
    _modal=[[CustomModalBox alloc]initWithFrame:CGRectMake(0, 0, 300, 200)];
    _modal.backgroundColor= [UIColor colorWithRed:65/255.0 green:105/255.0 blue:225/255.0 alpha:1.0];
    _modal.layer.cornerRadius=10.0;
    _modal.center = [lightBackgroundView convertPoint:lightBackgroundView.center fromView:lightBackgroundView.superview]; //relative center w.r.t self.view.center
    [_modal setQuestionLabelColor:[UIColor whiteColor]];
    [_modal.yesButton setHidden:YES];
    [_modal.noButton setHidden:YES];
    
    [lightBackgroundView addSubview:_modal];
    [_modal hide];
    
    helpButton=[UIButton buttonWithType:UIButtonTypeCustom];
    [helpButton setImage:[UIImage imageNamed:@"rules"] forState:UIControlStateNormal];
    helpButton.tag=100011;
    [helpButton addTarget:self action:@selector(buttonActionMethod:) forControlEvents:UIControlEventTouchUpInside];
    helpButton.frame=CGRectMake(self.view.frame.size.width-170 , 20, 200, 80);
    helpButton.showsTouchWhenHighlighted=YES;
    [self.view addSubview:helpButton];
#pragma mark dropAlert
    dropAlert=[[DropDownAlert alloc]initWithFrame:CGRectMake(0, -100, self.view.frame.size.width, 100) message:nil];
    dropAlert.backgroundColor=[UIColor lightGrayColor];
    [self.view addSubview:dropAlert];
    
}


- (void)updateProgress:(CGFloat )timer {
    if (timer!=1) {
        circularProgressView.progress = timer;
    }
    else
    {
        [circularProgressView removeFromSuperview];
    }
}





/*-(void)updateProgress:(CGFloat)fraction
 {
 UILabel* percentLabel = (UILabel*)[self.view viewWithTag:1];
 [percentLabel setText:[NSString  stringWithFormat:@"%d %@ completed", (int)(fraction*100),@"%"]];
 [progressView setProgress:fraction animated:YES];
 }
 */

-(void)buttonActionMethod:(UIButton *)sender
{
    MODAL_FOR_RULES;
    HEADER_TITLE;
    SPIRAL_VIEW;
    INSTRUCTION_LABEL_WITHOUT_TEXT;
    instructionLabel.text=@"a)Enter the correct answer in right circle.\n\nb)10 question are in total with no time limit.\n\nb)Result will be shown after attempting all 10 question.";
    FOOTER_TITLE;
}


-(void)handleTapOnModal:(UITapGestureRecognizer *)recognizer
{
    [self resignFirstResponder];
    [self dismissModalViewControllerAnimated:YES];
    
}

-(void)submitClicked:(UIButton *)sender
{
    
    sender.userInteractionEnabled=NO;
    if (answer.text.length>0) {
        NSString* question =[sqrtLabel.text substringFromIndex:1] ;
        if ([answer.text intValue]==sqrtf([question intValue]))
        {
            [audioToolBox playSound:@"correct" withExtension:@"mp3"];
            correctCount++;
            [answer setText:@""];
            [_modal setQuestion:@"Correct Answers!!"];
            
            [UIView animateWithDuration:3.0 delay:0.0 options:UIViewAnimationOptionCurveEaseInOut animations:^{
                NSLog(@"modal shown");
                [_modal show];
            } completion:^(BOOL finished) {
                sleep(1.0);
                
                [_modal hide];
                NSLog(@"modal hidden");
                if (correctCount+incorrectCount!=[questionArray count]) {
                    NSLog(@"show question 1");
                    [self showQuestion];
                    sender.userInteractionEnabled=YES;
                    
                }
                else  {
                    [self showResult];
                }
            }];
            if ((correctCount)%5==0)
            {
                complexity=complexity+5;
            }
        }
        else
        {
            answer.text=nil;
            incorrectCount++;
            [audioToolBox playSound:@"wrong" withExtension:@"mp3"];
            [UIView animateWithDuration:3.0 delay:0.0 options:UIViewAnimationOptionCurveEaseInOut animations:^{
                [_modal setQuestion:[NSString stringWithFormat:@"Wrong Answer \n Reason:  √%i =%.0f",[question intValue],sqrtf([question intValue])]];
                [_modal show];
                
            } completion:^(BOOL finished) {
                
                sleep(1.0);
                if (correctCount+incorrectCount!=[questionArray count]) {
                    [self showQuestion];
                    sender.userInteractionEnabled=YES;
                    
                }
                [_modal hide];
                if (correctCount+incorrectCount==[questionArray count]) {
                    [self showResult];
                }
            }];
            sender.userInteractionEnabled=YES;
            ;
        }
        
        int total=correctCount+incorrectCount;
        CGFloat fraction=(float)total/[questionArray count];
        [self updateProgress:fraction];
        
        
    }
    else{
        sender.userInteractionEnabled=YES;
        UIAlertView *alert=[[UIAlertView alloc]initWithTitle:@"Empty Fields" message:@"Enter some value" delegate:nil cancelButtonTitle:@"ok" otherButtonTitles:nil, nil];
        [alert show];
    }
}



-(void)showResult
{
    [audioToolBox playSound:@"award" withExtension:@"mp3"];
    
    [UIView animateWithDuration:2.0 delay:0.5 options:UIViewAnimationOptionCurveEaseInOut animations:^{
        [_modal setQuestion:[NSString stringWithFormat:@"Game Completed \nResult \n %.2f %@",[self calculatePercentage:correctCount total:correctCount+incorrectCount],@"%"]];
        [_modal show];
    } completion:^(BOOL finished) {
        sleep(3);
        [self.navigationController popViewControllerAnimated:YES];
    }];
}

-(void)showQuestion
{
    int  random=[[questionArray objectAtIndex:Counter++] intValue];
    [sqrtLabel setText:[NSString stringWithFormat:@"√%i",random]];
}

- (int)getRandomNumber:(int)from to:(int)to
{
    return (int)from + arc4random() % (to-from+1);
}


-(float)calculatePercentage:(float)correct total:(float)total
{
    return (correct/total *100);
}

-(int)getRandomPerfectSquare{
    int randomNumber=[self getRandomNumber:2 to:complexity];
    return (randomNumber*randomNumber) +(2*randomNumber)+1;
}

-(NSMutableArray *)getTenRandomLessThan:(int)M {
    NSMutableArray *uniqueNumbers = [[NSMutableArray alloc] init];
    int randomNumber;
    while ([uniqueNumbers count] < M) {
        randomNumber = arc4random() % M+2; // ADD 2 TO GET NUMBERS BETWEEN 2 AND M RATHER THAN 2 and M-1
        
        int perfectSquare=(randomNumber*randomNumber) +(2*randomNumber)+1;
        if (![uniqueNumbers containsObject:[NSNumber numberWithInt:perfectSquare]]) {
            [uniqueNumbers addObject:[NSNumber numberWithInt:perfectSquare]];
        }
    }
    return uniqueNumbers;
}


//only number as input from keyboard
- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string
{
    if ([string length] == 0 && range.length > 0)
    {
        textField.text = [textField.text stringByReplacingCharactersInRange:range withString:string];
        return NO;
    }
    
    NSCharacterSet *nonNumberSet = [[NSCharacterSet characterSetWithCharactersInString:@"0123456789"] invertedSet];
    if ([string stringByTrimmingCharactersInSet:nonNumberSet].length > 0)return YES;
    
    return NO;
}

- (void)viewDidUnload {
    [audioToolBox dispose];
}

- (BOOL)textFieldShouldReturn:(UITextField *)textField
{
    [textField resignFirstResponder];
    return YES;
}

-(void)KeyboardWillHide:(id)sender
{
    NSLog(@"%@",[sender class]);
    
}
- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end
